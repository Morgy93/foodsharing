# this must come before the variables section,
# so variables specified there can override defaults specified in the template
include:
  - template: Dependency-Scanning.gitlab-ci.yml

gemnasium-dependency_scanning:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master' || $CI_COMMIT_BRANCH == 'production'
    - if: $CI_MERGE_REQUEST_ID
      changes:
        - composer.lock
        - deployer/composer.lock
        - client/yarn.lock
        - websocket/yarn.lock
        - docs/yarn.lock
    - if: $CI_COMMIT_BRANCH == 'production' && $SKIP_CI_TESTS == 'true'
      when: never

variables:
  DS_EXCLUDED_ANALYZERS: "gemnasium-maven, gemnasium-python"
  # https://docs.docker.com/engine/userguide/storagedriver/selectadriver/
  # https://gitlab.com/gitlab-org/gitlab-ce/issues/19971
  DOCKER_DRIVER: overlay

stages:
  - outdated
  - build
  - test
  - deploy

.defaults:
  image: registry.gitlab.com/foodsharing-dev/images/ci/php:latest
  tags:
    - saas-linux-medium-amd64

.ssh:
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEPLOY_SSH_KEY")
    - mkdir -p ~/.ssh
    # For Docker builds disable host key checking. Be aware that by adding that
    # you are suspectible to man-in-the-middle attacks.
    # WARNING: Use this only with the Docker executor, if you use it with shell
    # you will overwrite your user's SSH config.
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

.deploy:
  extends:
    - .defaults
    - .ssh
  stage: deploy
  tags:
    - foodsharing-deploy
  script:
    - chmod -R 750 ./
    - (cd deployer && composer install)
    - deployer/vendor/bin/dep deploy $CI_ENVIRONMENT_NAME --revision $CI_COMMIT_SHA
    - ./scripts/deploy-restart-services
    - ./scripts/deploy-notify-slack

.deploy-app:
  extends:
    - .deploy
  needs:
    - build:frontend
    - build:backend
    - build:websocket
    - job: test:frontend
      artifacts: false
    - job: test:backend-acceptance
      artifacts: false
    - job: test:backend-code
      artifacts: false
    - job: test:websocket
      artifacts: false

outdated:
  extends:
    - .defaults
  stage: outdated
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_JOB == "outdated"
      when: always
  script:
    - ./scripts/ci-notify-outdated
  cache:
    key: outdated:cache
    paths:
      - vendor

.build-artifacts: &build-artifacts
  expire_in: 1 day

.dirs-app-rule:
  rules:
    if: $CI_MERGE_REQUEST_ID
    changes:
      - css/**/*
      - docker/**/*
      - img/**/*
      - lib/**/*
      - migrations/**/*
      - public/**/*
      - scripts/**/*
      - templates/**/*
      - tests/**/*
      - translations/**/*
      - .gitlab-ci.yml
      - .php-cs-fixer.php
      - codeception.yml
      - composer.json
      - composer.lock
      - config.inc.*
      - deploy.php
      - jsconfig.json
      - phinx.php
      - phpstan.neon
      - run.php

.dirs-backend-rule:
  rules:
    if: $CI_MERGE_REQUEST_ID
    changes:
      - src/**/*
      - config/**/*

.dirs-frontend-rule:
  rules:
    if: $CI_MERGE_REQUEST_ID
    changes:
      - client/**/*

.dirs-websocket-rule:
  rules:
    if: $CI_MERGE_REQUEST_ID
    changes:
      - websocket/**/*

.dirs-docs-rule:
  rules:
    if: $CI_MERGE_REQUEST_ID
    changes:
      - docs/**/*
      - scripts/**/*
      -
test:qodana:
  extends:
    - .defaults
  stage: test
  interruptible: true
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
    - !reference [.dirs-app-rule, rules]
    - !reference [.dirs-frontend-rule, rules]
    - if: $CI_COMMIT_BRANCH == 'production' && $SKIP_CI_TESTS == 'true'
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  image: jetbrains/qodana
  variables:
    API_KEY: "$QODANA_API_KEY"
    QODANA_SERVER: "https://cloud.qodana.com"
    QODANA_REMOTE_URL: git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
    QODANA_BRANCH: $CI_COMMIT_BRANCH
    QODANA_REVISION: $CI_COMMIT_SHA
    QODANA_JOB_URL: $CI_JOB_URL
  script:
    - ln -sf $CI_PROJECT_DIR/ /data/project
    - /opt/idea/bin/entrypoint --save-report
    - cp -r /data/results $CI_PROJECT_DIR/qodana
  artifacts:
    paths:
      - $CI_PROJECT_DIR/qodana
