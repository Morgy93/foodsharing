sentry:
  dsn: !php/const SENTRY_URL
  messenger:
    enabled: true # flushes Sentry messages at the end of each message handling
    capture_soft_fails: true # captures exceptions marked for retry too
  options:
    environment: '%kernel.environment%'
    release: !php/const SRC_REVISION #your app version
    send_default_pii: true
    # see https://docs.sentry.io/platforms/php/guides/symfony/configuration/sampling/#configuring-the-transaction-sample-rate
    # we could also configure a function/callable here using `traces_sampler` to adjust the rate dynamically in some way
    traces_sample_rate: !php/const SENTRY_TRACING_SAMPLE_RATE
    integrations:
      - 'Sentry\Integration\IgnoreErrorsIntegration'

services:
  Sentry\Integration\IgnoreErrorsIntegration:
    arguments:
      $options:
        ignore_exceptions: #exclude validation errors
          - Symfony\Component\Security\Core\Exception\AccessDeniedException
          - Symfony\Component\HttpKernel\Exception\HttpException