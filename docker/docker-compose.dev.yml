version: '2'
services:

  # nginx
  #------------------------------------

  # proxies connections to app/chat

  web:
    container_name: foodsharing_dev_web
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    ports:
      - 18080:8080
    depends_on:
      - app
      - chat
    volumes:
      - ../:/app

  # main php app
  #------------------------------------

  app:
    container_name: foodsharing_dev_app
    build:
      context: ..
      dockerfile: docker/Dockerfile.php
    expose:
      - 9000
    links:
      - redis:redis
      - db:db
      - chat:chat
    volumes:
      - ../:/app
    environment:
      FS_ENV: dev

  # django api backend
  #------------------------------------

  api:
    container_name: foodsharing_dev_api
    image: python:3.5.3
    command: >
      sh -c "
      (test -f manage.py || git clone https://github.com/foodsharing-dev/foodsharing-django-api.git .) &&
      (command -v virtualenv || /usr/local/bin/pip install virtualenv) &&
      (test -d env/bin || virtualenv --no-site-packages env) &&
      (test -f env/bin/pip-sync || env/bin/pip install pip-tools) &&
      env/bin/pip-sync &&
      env/bin/python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ../:/app
      - ../docker/conf/api/local_settings.py:/app/api/config/local_settings.py
      - /app/api/env
      - /root/.cache/pip
    environment:
      # TODO: I don't think the backend supports this as of now
      REDIS_HOST: redis
    working_dir: /app/api

  # nodejs socket.io server
  #------------------------------------

  chat:
    container_name: foodsharing_dev_chat
    command: node server.js 0.0.0.0
    build:
      context: ../chat
      dockerfile: docker/Dockerfile.chat
    expose:
      - 1337
      - 1338
    volumes:
      - ../:/app

  # mysql
  #------------------------------------

  db:
    container_name: foodsharing_dev_db
    build:
      context: ..
      dockerfile: docker/Dockerfile.db.dev
    # so we can mount tmpfs inside container
    privileged: true
    expose:
      - 3306
    ports:
      - 13306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ../:/app

  # redis
  #------------------------------------

  redis:
    container_name: foodsharing_dev_redis
    image: redis:alpine
    expose:
      - 6379

  # phpmyadmin
  #------------------------------------

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: foodsharing_dev_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
    restart: always
    ports:
      - 18081:80
    volumes:
      - /sessions
