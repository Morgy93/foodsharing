version: '3'
services:

  # nginx
  #------------------------------------

  # proxies connections to app/chat

  web:
    container_name: "foodsharing_${FS_ENV}_web"
    image: registry.gitlab.com/foodsharing-dev/images/web:1.5
    depends_on:
      - app
      - chat
    volumes:
      - ../:/app

  # main php app
  #------------------------------------

  app:
    container_name: "foodsharing_${FS_ENV}_app"
    image: registry.gitlab.com/foodsharing-dev/images/php:2.11
    working_dir: /app
    expose:
      - 9000
    links:
      - redis:redis
      - db:db
      - chat:chat
    depends_on:
      - db
      - redis
      - mailqueuerunner
    volumes:
      - ../:/app
    environment:
      FS_ENV: "${FS_ENV}"
      REDIS_HOST: redis

  # webpack client javascript
  #------------------------------------

  client:
    container_name: "foodsharing_${FS_ENV}_client"
    image: node:10.12
    # we don't run webpack dev mode by default, make them run ./scripts/dev
    command: 'true'
    working_dir: /app/client
    user: "${UID}"
    volumes:
    - ../:/app
    - client_node_modules:/app/client/node_modules
    environment:
      HOST: 0.0.0.0
      PROXY_TARGET: http://web:8080

  # php mail queue runner
  #------------------------------------

  mailqueuerunner:
    container_name: "foodsharing_${FS_ENV}_mailqueuerunner"
    image: registry.gitlab.com/foodsharing-dev/images/php:2.11
    command: php run.php Mails queueWorker
    restart: always
    depends_on:
      - db
      - redis
    working_dir: /app
    links:
      - maildev
      - redis:redis
      - db:db
    volumes:
      - ../:/app
    environment:
      FS_ENV: "${FS_ENV}"
      REDIS_HOST: redis

  # nodejs socket.io server
  #------------------------------------

  chat:
    container_name: "foodsharing_${FS_ENV}_chat"
    command: sh -c "yarn && node server.js 0.0.0.0"
    image: registry.gitlab.com/foodsharing-dev/images/chat:1.1
    working_dir: /app/chat
    depends_on:
      - redis
    environment:
      REDIS_HOST: redis
    expose:
      - 1337
      - 1338
    volumes:
      - ../:/app
      - chat_node_modules:/app/node_modules

  # mysql
  #------------------------------------

  db:
    container_name: "foodsharing_${FS_ENV}_db"
    image: registry.gitlab.com/foodsharing-dev/images/db/dev:1.0
    # so we can mount tmpfs inside container
    privileged: true
    expose:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - ../:/app

  # redis
  #------------------------------------

  redis:
    container_name: "foodsharing_${FS_ENV}_redis"
    image: redis:alpine
    expose:
      - 6379

  # phpmyadmin
  #------------------------------------

  phpmyadmin:
    container_name: "foodsharing_${FS_ENV}_phpmyadmin"
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_USER: root
      PMA_PASSWORD: root
    restart: always
    volumes:
      - ${PWD}/docker/conf/phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
      - /sessions

  # maildev
  #------------------------------------

  maildev:
    container_name: "foodsharing_${FS_ENV}_maildev"
    command: >
      bin/maildev
        --web 80
        --smtp 25
        --hide-extensions STARTTLS
    image: djfarrelly/maildev

volumes:
  client_node_modules:
  chat_node_modules:
