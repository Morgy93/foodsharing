#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

basedir="$(dirname "$0")/.."

if [ "${SLACK_WEBHOOK_URL:-}" ]; then
  echo "SLACK_WEBHOOK_URL was set"
else
  echo "SLACK_WEBHOOK_URL was not set"
  exit 1
fi

json_escape () {
      # clearly not a very thorough json escaping ... ;)
      local text="$1"
      text=${text//\"/\\\"} # escape double quotes
      printf '"%s"' "$text"
}

send_to_slack () {
  local title="$1"
  local content="$2"
  local text
  # shellcheck disable=SC2016
  text="$(printf '*%s*\n\n```\n%s\n```\n' "$title" "$content")"
  local escaped
  escaped=$(json_escape "$text")
  local payload
  payload=$(printf '{
    "username": "Outdated Packages Bot",
    "icon_emoji": ":warning:",
    "channel": "#fs-outdated",
    "text": %s
  }' "$escaped")
  echo "Posting: $title"
  curl \
      --request POST \
      --header 'Content-type: application/json' \
      --data "$payload" \
      "$SLACK_WEBHOOK_URL" \
      --fail \
      --silent \
      --show-error
    if [ $? -eq 0 ]; then
      echo "Posting successful!"
    else
      echo "Posting failed!"
    fi
}

composer_outdated () {
  local dir="$1"
  cd "$dir" && composer outdated --direct --locked
}

yarn_outdated () {
  local dir="$1"
  cd "$dir" && yarn outdated | grep --extended-regexp --invert-match '<red|yellow|green>|Color legend'
}

send_to_slack "Outdated PHP dependencies" "$(composer_outdated "$basedir")"
send_to_slack "Outdated Javascript dependencies (client/)" "$(yarn_outdated "$basedir/client")"
send_to_slack "Outdated Javascript dependencies (websocket/)" "$(yarn_outdated "$basedir/websocket")"
send_to_slack "Outdated Javascript dependencies (docs/)" "$(yarn_outdated "$basedir/docs")"
