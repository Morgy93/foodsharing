#!/bin/bash

export FS_ENV=ci

set -e

dir=$(dirname "$0")

. $dir/inc.sh
echo $SECONDS seconds elapsed

if [ "x" != "x$CI_BUILD_TOKEN" ]; then
  log-header "Logging into docker registry"
  SECONDS=0
  docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  echo $SECONDS seconds elapsed
fi

log-header "Building images"
SECONDS=0
for name in app chat web; do
  dc build $name &
done

wait
echo $SECONDS seconds elapsed

log-header "Bring up containers"
SECONDS=0
dc up -d --no-build

log-header "Waiting for mysql to start"
wait-for-mysql
echo $SECONDS seconds elapsed

log-header "Initializing database"
SECONDS=0
sql-query mysql 'drop database if exists foodsharing; create database foodsharing'

migratedb foodsharing

$dir/mkdirs
echo $SECONDS seconds elapsed

log-header "Installing composer deps"
SECONDS=0
exec-in-container-asroot app composer install
echo $SECONDS seconds elapsed

log-header "Checking code style"
SECONDS=0
exec-in-container-asroot app scripts/php-cs-fixer.ci.sh --cache-file=vendor/php-cs-cache fix
echo $SECONDS seconds elapsed

log-header "Running tests"
failed=0
SECONDS=0
exec-in-container-asroot app rm -rf tmp/.views-cache
exec-in-container app vendor/bin/codecept run --xml --html "$@" || failed=1
echo $SECONDS seconds elapsed

if [ $failed -eq 1 ]; then
  log-header "Rerunning failed tests"
  SECONDS=0
  exec-in-container app vendor/bin/codecept run -g failed "$@"
  echo $SECONDS seconds elapsed
fi

log-header "Running chat tests"
SECONDS=0
run-in-container chat npm test
echo $SECONDS seconds elapsed

echo "Done!"
