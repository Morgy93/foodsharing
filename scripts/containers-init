#!/bin/bash

export FS_ENV=dev
export CURRENT_USER=$(id -u):$(id -g)

# set -o errexit tells the shell to exit as soon as a command exits with non-zero status, i.e. fails
set -o errexit

dir=$(dirname "$0")

# source runs the content of the argument as if it was here (without launching a subshell!)
# __helping-functions.sh defines basic functions, mainly to run commands in containers
# shellcheck source=./__helping-functions.sh
source "$dir"/__helping-functions.sh

log-header "Bringing up containers ..."
# dc is defined in __helping-functions.sh
dc build --parallel
dc up -d

log-header "Running composer install ..."
exec-in-container app 'composer install'

log-header "Create folder structur ..."
exec-in-container app bin/console foodsharing:setup

log-header "Reset (clear) cache ..."
exec-in-container app "bin/console cache:clear"
exec-in-container app "rm --recursive --force cache/.views-cache cache/di-cache.php"

if ! sql-query mysql 'use foodsharing'; then
    log-header "Initialize Database ..."
    "$dir"/db-init || "$dir"/db-init
fi

log-header "Waiting for assets to be generated ..."
wait-for-assets
exec-in-container app "bin/console assets:install"

log-header "All done"

"$dir"/__helping-print-intro.sh
